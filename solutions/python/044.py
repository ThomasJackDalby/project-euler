"""
    Problem 44
    ==========
    
    
    Pentagonal numbers are generated by the formula, P[n]=n(3n−1)/2. The first
    ten pentagonal numbers are:
    
    1, 5, 12, 22, 35, 51, 70, 92, 117, 145, ...
    
    It can be seen that P[4] + P[7] = 22 + 70 = 92 = P[8]. However, their
    difference, 70 − 22 = 48, is not pentagonal.
    
    Find the pair of pentagonal numbers, P[j] and P[k], for which their sum
    and difference are pentagonal and D = |P[k] − P[j]| is minimised; what is
    the value of D?
    
    
    Answer: 2c2556cb85621309ca647465ffa62370
"""
from common import check
from itertools import count, takewhile

PROBLEM_NUMBER = 44
ANSWER_HASH = "2c2556cb85621309ca647465ffa62370"

pentagonals = set()

def get_pentagonal(n):
    t = n * (3 * n - 1) * 0.5
    pentagonals.add(t)
    return t

def generate():
    for i in count(1):
        yield get_pentagonal(i)

generator = generate()

def is_pentagonal(n):
    for t in takewhile(lambda t: t < n, generator):
        pass
    return n in pentagonals    

max_difference = None
max_i = None
max_j = None

for i in count(1):
    p_i = get_pentagonal(i)
    for j in range(i - 1, 0, -1):
        p_j = get_pentagonal(j)

        D = p_i - p_j
        if max_difference is not None and D > max_difference:
            continue

        if not is_pentagonal(D):
            continue

        if not is_pentagonal(p_i + p_j):
            continue
        
        max_difference = D


check(None, PROBLEM_NUMBER, ANSWER_HASH)
