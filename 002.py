""" 
    Problem 2
    =========

    Each new term in the Fibonacci sequence is generated by adding the
    previous two terms. By starting with 1 and 2, the first 10 terms will be:

    1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

    By considering the terms in the Fibonacci sequence whose values do not
    exceed four million, find the sum of the even-valued terms.
   
    Answer: 4194eb91842c8e7e6df099ca73c38f28
"""
from common import check

PROBLEM_NUMBER = 2
ANSWER_HASH = "4194eb91842c8e7e6df099ca73c38f28"
MAX_ITERATION = 4000000

def is_even(number):
    return number % 2

sum = 0
fib_last = 0
fib_current = 1

while fib_current < MAX_ITERATION:
    fib_next = fib_current + fib_last

    if is_even(fib_current):
        sum += fib_current

    fib_last = fib_current
    fib_current = fib_next

check(sum, PROBLEM_NUMBER, ANSWER_HASH)
